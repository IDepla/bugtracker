"""
Django settings for web project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
import sys
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

if "DJANGO_APPLICATION_DEBUG" in os.environ:

    DEBUG = os.environ["DJANGO_APPLICATION_DEBUG"] == "True" or True
else:
    DEBUG = True

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
if "DJANGO_SECRET_KEY" in os.environ:
    SECRET_KEY = os.environ["DJANGO_SECRET_KEY"]
elif DEBUG:
    SECRET_KEY = "django-insecure-fltxttvuzimm-^(2ugt$+8pxe_b287a(kv1_fy=$n@6m=e@c%4"

if "DJANGO_HOST_WEB" in os.environ:
    ALLOWED_HOSTS = [os.environ["DJANGO_HOST_WEB"], "localhost","127.0.0.1"]
else:
    ALLOWED_HOSTS = ["localhost","127.0.0.1"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'rest_framework.authtoken',
    "django.contrib.humanize",
    "tinymce",
    "rest_framework",
    'drf_spectacular',
    'api',
    'web',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "web.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": ["web/templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "web.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases


if "test" in sys.argv or DEBUG is True:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }

else:
    # postgis
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "NAME": os.environ["POSTGRESQL_DATABASE"],
            "USER": os.environ["POSTGRESQL_USER"],
            "PASSWORD": os.environ["POSTGRESQL_PASSWORD"],
            "HOST": os.environ["POSTGRESQL_HOST"],
            "PORT": os.environ["POSTGRESQL_PORT"],
        },
    }


if not DEBUG:
    # STATIC_ROOT = BASE_DIR.as_posix() + "web/static"
    STATIC_URL = (
        os.environ["DJANGO_HOST_STATIC_CONTENT"]
        + "/"
        + os.environ["DJANGO_STATIC_DIRECTORY"]
    )
    STATIC_ROOT = os.environ["DJANGO_STATIC_ROOT"]
else:
    if "DJANGO_HOST_STATIC_CONTENT" in os.environ:
        STATIC_URL = os.environ["DJANGO_HOST_STATIC_CONTENT"] + "/" + "static/"
        STATIC_ROOT = BASE_DIR.as_posix() + "/web/static"

        TEST_ADDRESS = os.environ["DJANGO_TEST_ADDRESS"]  # "http://127.0.0.1:8080"
    else:
        STATIC_URL = "static/"


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = "web.User"

REST_FRAMEWORK = {
    # YOUR SETTINGS
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ]
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'BugTracker API',
    'DESCRIPTION': 'A Simple Bug Tracker',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
}


LOGIN_REDIRECT_URL = "/open/"
LOGIN_URL = "/account/login/"
LOGOUT_REDIRECT_URL = "/"